// <auto-generated />
using System;
using AiesecBiH.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AiesecBiH.Migrations
{
    [DbContext(typeof(AiesecContext))]
    [Migration("20210619000219_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AiesecBiH.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sarajevo",
                            Postcode = "71000"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mostar",
                            Postcode = "88000"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zenica",
                            Postcode = "72000"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Banja Luka",
                            Postcode = "78000"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sarajevo",
                            Postcode = "71000"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tuzla",
                            Postcode = "77000"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllFunctionalFields")
                        .HasColumnType("bit");

                    b.Property<bool>("AllLocalCommittees")
                        .HasColumnType("bit");

                    b.Property<bool>("AllMembers")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Attended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendances");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "PD",
                            Active = true,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 525, DateTimeKind.Local).AddTicks(9713),
                            Name = "Partnership Development"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "MKT",
                            Active = true,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 526, DateTimeKind.Local).AddTicks(1495),
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "IGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 526, DateTimeKind.Local).AddTicks(1523),
                            Name = "Incomming Global Volounteere"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "OGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 526, DateTimeKind.Local).AddTicks(1531),
                            Name = "Outgoing Global Volounteere"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "P",
                            Active = true,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 526, DateTimeKind.Local).AddTicks(1539),
                            Name = "Presidency"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "TM",
                            Active = true,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 526, DateTimeKind.Local).AddTicks(1547),
                            Name = "Talent Management"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId")
                        .IsUnique();

                    b.ToTable("LocalCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CityId = 1,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(8985),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(8236)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CityId = 2,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9735),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9707)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CityId = 3,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9759),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9756)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CityId = 4,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9770),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9767)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CityId = 5,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9781),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9777)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CityId = 6,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9791),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 528, DateTimeKind.Local).AddTicks(9788)
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Safeta Zajke 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "hari.hodzic98@gmail.com",
                            FirstName = "Haris",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Hodzic",
                            LocalCommitteeId = 1,
                            PasswordHash = "ov70HHTTepsm8Wg/h4XSxZIK1ynNjAsitsqk6+8B0TpzKFHkX5LzXi3EvDLB0nJtFkuf82PU6mZpLeJ3rnYIjA==",
                            PasswordSalt = "cp2cU81Y3CsRz0jB1vKOyw==",
                            PhoneNumber = "062123344",
                            RoleId = 1,
                            Username = "harishodzic"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Safeta Zajke 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "sulejman.tutnjevic98@gmail.com",
                            FirstName = "Sulejman",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Tutnjevic",
                            LocalCommitteeId = 1,
                            PasswordHash = "wL+eP7QPApN7T6ocsWFCr2rZ/4VZvH3AGTMB4hDgySgHq1+lqeIj4Oh7oWZd+aj421AMusbBToVbDL1zsxL1cg==",
                            PasswordSalt = "jWO5QbhGpgbty3Bn9AzVkA==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "sulejmantutnjevic"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Zahira Panjete 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "tarik.bucan98@gmail.com",
                            FirstName = "Tarik",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Bucan",
                            LocalCommitteeId = 2,
                            PasswordHash = "XnnPKR8U8IUWbyPp9+JMVqw5lGwnUqJffL8zQDethok2g4S1h6rVxU6av31hx0diUJRkC9OGw0ITcXNrifEHYA==",
                            PasswordSalt = "LQfscyY750ZN1ZFCRPZXsA==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "tarikbucan"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Grbavica 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "selma.idic@aiesec.com",
                            FirstName = "Selma",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Idic",
                            LocalCommitteeId = 2,
                            PasswordHash = "rOcQptdTJCHi59jYAs9MzVY5Nclp+0qxdC74pqkFovGSifl2Ou4Y8ecQrXGASNGHRSiUEMkeyzDIMoBpHxa//w==",
                            PasswordSalt = "ZaJvXw7roFwN+KHUiaFZOw==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "selmaidic"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Dobrinjska 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "ajdin.kahrimanovic8@aiesec.com",
                            FirstName = "Ajdin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Kahrimanovic",
                            LocalCommitteeId = 2,
                            PasswordHash = "6pW1yhKo79/dtUPaBDeL9fJbqKi0NldjTbKOlV1eYmyJckEEWOXqEOEN8Yu5CelcrVMCEmRq9WoeuDg3/DIsRA==",
                            PasswordSalt = "UNEtTnQcGSVGSgh7o9uC2g==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "ajdinkahrimanovic"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Doglodi 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "emir.zukic@gmail.com",
                            FirstName = "Emir",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Zukic",
                            LocalCommitteeId = 2,
                            PasswordHash = "Vnv/SqsfAbn+M8SP/QOH1/g+i7XAcJPtPnAUdEtTJvOx9+eCo71Ru3lqwMIIV3uIXQRp+VVcdsDRbJmVg8fxDA==",
                            PasswordSalt = "EL+YrXcVp3q7xkOuBII85w==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "emirzukic"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Grbavica 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "doraglinac@gmail.com",
                            FirstName = "Dora",
                            FunctionalFieldId = 1,
                            Gender = "F",
                            LastName = "Glinac",
                            LocalCommitteeId = 1,
                            PasswordHash = "aPGQBED3L3HoA2iVXsOKRbF+48Fs5KlzEmFhLgQdwc5HoLnQAVv209vrn4cdC90ykmk9wpX7UXVSBaSXZ4pE3g==",
                            PasswordSalt = "P6uFJD8jfu32gXjPOPGYqg==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "doraglinac"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Borik 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "nikola.bujak@gmail.com",
                            FirstName = "Nikola",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Bujak",
                            LocalCommitteeId = 1,
                            PasswordHash = "11GWFXiApm6OlSdSKOV0HOLXnY84nhnxhtBiuRGRriemoWh1tgcTeT4HO+bYorYmmai+68m98qYEo+IQV6ihUQ==",
                            PasswordSalt = "SjuDfwV9Jav2ORl0++ow9g==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nikolabujak"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Gospodska 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "nevzudindosic@gmail.com",
                            FirstName = "Nevzudin",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Dosic",
                            LocalCommitteeId = 1,
                            PasswordHash = "N/KcIBc4LGW6tpH/mtBV4SOQ1pcbNX0yvxlnLnGf36omZlTMWPDAgiNstxgMN94rF3pBmHCkabnhIbJ7qRTAVw==",
                            PasswordSalt = "bFkzhtjOBEBNrFOkI988+Q==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nevzudindosic"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Mostar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "klarazovko@gmail.com",
                            FirstName = "Klara",
                            FunctionalFieldId = 2,
                            Gender = "F",
                            LastName = "Zovko",
                            LocalCommitteeId = 1,
                            PasswordHash = "IPEyJ/S0cQv7p8jo9tYFK14BcWOjGROhFvDwqjuRVfta8DgauR/tcae7Xnb7vSajFbRbdYiBRDNyBQj9LMjvoA==",
                            PasswordSalt = "2WH5D0v0JR2nxeH9MXVn/Q==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "klarazovko"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Trg Alije Izetbegovica 2",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 529, DateTimeKind.Local).AddTicks(7378),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 531, DateTimeKind.Local).AddTicks(6886),
                            LocalCommitteeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ulica 3",
                            Capacity = 10,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 532, DateTimeKind.Local).AddTicks(2088),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 532, DateTimeKind.Local).AddTicks(2169),
                            LocalCommitteeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Ulica 4",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 532, DateTimeKind.Local).AddTicks(2217),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 532, DateTimeKind.Local).AddTicks(2224),
                            LocalCommitteeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Ulica 22",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 6, 19, 2, 2, 18, 532, DateTimeKind.Local).AddTicks(2242),
                            EstablishmentDate = new DateTime(2021, 6, 19, 2, 2, 18, 532, DateTimeKind.Local).AddTicks(2248),
                            LocalCommitteeId = 4
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mandate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AiesecBiH.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "Admin",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "TM",
                            Name = "TeamMember"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "TL",
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "P",
                            Name = "President"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfExecution")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<int>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberExecutorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("MemberCreatorId");

                    b.HasIndex("MemberExecutorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Events")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Events")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.HasOne("AiesecBiH.Database.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.HasOne("AiesecBiH.Database.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.HasOne("AiesecBiH.Database.City", "City")
                        .WithOne()
                        .HasForeignKey("AiesecBiH.Database.LocalCommittee", "CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Members")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Members")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Offices")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany()
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany()
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberCreator")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("MemberCreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberExecutor")
                        .WithMany("ExecutedTasks")
                        .HasForeignKey("MemberExecutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("MemberCreator");

                    b.Navigation("MemberExecutor");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");

                    b.Navigation("Offices");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Navigation("CreatedTasks");

                    b.Navigation("ExecutedTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
