// <auto-generated />
using System;
using AiesecBiH.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AiesecBiH.Migrations
{
    [DbContext(typeof(AiesecContext))]
    partial class AiesecContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllFunctionalFields")
                        .HasColumnType("bit");

                    b.Property<bool>("AllLocalCommittees")
                        .HasColumnType("bit");

                    b.Property<bool>("AllMembers")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Attended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendances");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "P",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 168, DateTimeKind.Local).AddTicks(6806),
                            Name = "Presidency"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "MKT",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 168, DateTimeKind.Local).AddTicks(7745),
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "IGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 168, DateTimeKind.Local).AddTicks(7775),
                            Name = "Incomming Global Volounteere"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "OGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 168, DateTimeKind.Local).AddTicks(7784),
                            Name = "Outgoing Global Volounteere"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "PD",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 168, DateTimeKind.Local).AddTicks(7793),
                            Name = "Partnership Development"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7411),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(6451),
                            Name = "<Undefined>"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7544),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7520),
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7569),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7561),
                            Name = "Mostar"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7594),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7586),
                            Name = "Zenica"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7618),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 171, DateTimeKind.Local).AddTicks(7610),
                            Name = "Banja Luka"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 179, DateTimeKind.Local).AddTicks(7640),
                            EmailAddress = "aiesec@aiesec.com",
                            FirstName = "Admin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Admin",
                            LocalCommitteeId = 1,
                            PasswordHash = "PXbwgsNhPfVsDXUb57xb87N8kjCq8mQEg+gi2PQVwxvs2/aiEjq/RlZsZ55qnE26+rKasxM6nlFol7zwF64//A==",
                            PasswordSalt = "bwtl5ZsjVTHZqg8v6/e69A==",
                            PhoneNumber = "03355123",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Dobrinjska 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 187, DateTimeKind.Local).AddTicks(7873),
                            EmailAddress = "ajdin.kahrimanovic8@aiesec.com",
                            FirstName = "Ajdin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Kahrimanovic",
                            LocalCommitteeId = 2,
                            PasswordHash = "Y8GrxVWP7tpna7E48Grl5/Sh149ph5g+Y7EjskSIQPU7WjlConV8c7S1eUMOFkR3j9QKM8zgkvznY+2PzxWXZw==",
                            PasswordSalt = "pohLXxYB+B6GmzeViVs4XQ==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "ajdinkahrimanovic"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Address = "Safeta Zajke 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 187, DateTimeKind.Local).AddTicks(9821),
                            EmailAddress = "sulejman.tutnjevic98@gmail.com",
                            FirstName = "Sulejman",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Tutnjevic",
                            LocalCommitteeId = 2,
                            PasswordHash = "y/uwppCK3TMBUWm5ZRKMFt6LvCzoDCvQX2VDe4CPuex2cwpUEDCQVmbobZxMchyqv12oIgeoHKYrDE+SqMdt/A==",
                            PasswordSalt = "HvRX4kgbSTMIkpYxrJ4kqA==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "sulejmantutnjevic"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Zahira Panjete 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(62),
                            EmailAddress = "tarik.bucan98@gmail.com",
                            FirstName = "Tarik",
                            FunctionalFieldId = 3,
                            Gender = "M",
                            LastName = "Bucan",
                            LocalCommitteeId = 2,
                            PasswordHash = "c2jgm3RM/fH5yh1mmqCoGvsRyIfEW0KOZ+Y9tL++NQlHCB5o4ostTRPk62ED5AWqFD6PfX1b+sK9HkROUSQjgQ==",
                            PasswordSalt = "emMNMMWc2ujfnbyOhZrvug==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "tarikbucan"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Grbavica 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(184),
                            EmailAddress = "selma.idic@aiesec.com",
                            FirstName = "Selma",
                            FunctionalFieldId = 4,
                            Gender = "M",
                            LastName = "Idic",
                            LocalCommitteeId = 1,
                            PasswordHash = "ioLQRxZK7gW7roHuiyiOqTCzQmFBZOCdShi26zjPaZqqsM4Z8xNmVhDGQqvsHkgMpqxd+HeLT06RLbq+HO73Kw==",
                            PasswordSalt = "6XxGg+8NcRdfrH0MNfod3Q==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "selmaidic"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Address = "Doglodi 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(266),
                            EmailAddress = "emir.zukic@gmail.com",
                            FirstName = "Emir",
                            FunctionalFieldId = 5,
                            Gender = "M",
                            LastName = "Zukic",
                            LocalCommitteeId = 3,
                            PasswordHash = "h+stRd5L0TpJ8RcRjyAyZDhZsfOLGpqFMW5gfwrfiNg/Q7o/4jwQ0EBUIH8HQY9fxc14zyUz91kIDiFVSnckgw==",
                            PasswordSalt = "f0ezYUTG0+bLJBD08cl+ww==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "emirzukic"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Address = "Grbavica 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(344),
                            EmailAddress = "doraglinac@gmail.com",
                            FirstName = "Dora",
                            FunctionalFieldId = 1,
                            Gender = "F",
                            LastName = "Glinac",
                            LocalCommitteeId = 2,
                            PasswordHash = "n78cjHrRJqCJmB/OmPdfii62y6E89VrXP9s/8diReJdfSHWsyiCfVbL8i9/sm8POW/VB4a4aAxz0XirG/bjXiQ==",
                            PasswordSalt = "2Pah+3KVAsTbm/MrvXbxgw==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "doraglinac"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Address = "Borik 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(419),
                            EmailAddress = "nikola.bujak@gmail.com",
                            FirstName = "Nikola",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Bujak",
                            LocalCommitteeId = 2,
                            PasswordHash = "z5QUERRy9Kjh0sgH96Y3Jys/UDVH74T/4rVgLA6Al6QiqowU0gUJ0lPgBZ8t0bOODQth78GDOPcKJ1a1+ISNog==",
                            PasswordSalt = "xpwvY8wh7DEcy1FhmNleqg==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nikolabujak"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Address = "Gospodska 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(492),
                            EmailAddress = "nevzudindosic@gmail.com",
                            FirstName = "Nevzudin",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Dosic",
                            LocalCommitteeId = 2,
                            PasswordHash = "HtnXKeGoCq/2dmksQjXhp/pVtXfUrm50ZtoY7YsmKUtC7rLDf0qLKagr2tJ2KsMvRAiCzaptKztL7VrTRy4V/A==",
                            PasswordSalt = "PbVwdlkActhd+tTmWK6upQ==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nevzudindosic"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Address = "Mostar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(566),
                            EmailAddress = "klarazovko@gmail.com",
                            FirstName = "Klara",
                            FunctionalFieldId = 2,
                            Gender = "F",
                            LastName = "Zovko",
                            LocalCommitteeId = 1,
                            PasswordHash = "6DNaWTnXA75dGiDov7fcUMTFtNxC70t7IIpLNNpHHMjsm7VY6ro11olZ3q8cKmfMwSxx3533PvIZtvUXMbA6gg==",
                            PasswordSalt = "MP9PncJbJChLklz5LCU71A==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "klarazovko"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            Address = "Centar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(673),
                            EmailAddress = "hanakulenovic@gmail.com",
                            FirstName = "Hana",
                            FunctionalFieldId = 1,
                            Gender = "F",
                            LastName = "Kulenovic",
                            LocalCommitteeId = 4,
                            PasswordHash = "6DNaWTnXA75dGiDov7fcUMTFtNxC70t7IIpLNNpHHMjsm7VY6ro11olZ3q8cKmfMwSxx3533PvIZtvUXMbA6gg==",
                            PasswordSalt = "MP9PncJbJChLklz5LCU71A==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "hanakulenovic"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 188, DateTimeKind.Local).AddTicks(765),
                            EmailAddress = "harisbrulic@gmail.com",
                            FirstName = "Haris",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Brulic",
                            LocalCommitteeId = 3,
                            PasswordHash = "6DNaWTnXA75dGiDov7fcUMTFtNxC70t7IIpLNNpHHMjsm7VY6ro11olZ3q8cKmfMwSxx3533PvIZtvUXMbA6gg==",
                            PasswordSalt = "MP9PncJbJChLklz5LCU71A==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "harisbrulic"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Notices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Otvaraju se prijave za poziciju MCP iduceg mandata.",
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 2,
                            Title = "Prijava za poziciju"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Suspendisse convallis non orci sed viverra. Sed ac sapien vitae sapien cursus tincidunt quis id nibh. Quisque dictum et dolor in lobortis. Nulla turpis ligula, vehicula vel elit commodo, euismod fermentum lacus. Donec ligula turpis, maximus at velit a, fringilla lobortis ligula.",
                            CreatedDate = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 3,
                            Title = "Fusce aliquam mi vehicula"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Nunc in egestas dui. Fusce efficitur enim nunc, sit amet mattis dolor efficitur ac. Proin pulvinar urna non elit vestibulum,",
                            CreatedDate = new DateTime(2020, 8, 8, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 4,
                            Title = "Nunc imperdiet urna ac orci"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            CreatedDate = new DateTime(2020, 10, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 5,
                            Title = "Fusce erat est fermentum"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Maecenas in tellus metus. Integer commodo turpis a massa tincidunt vulputate. Integer lacus ligula, tristique nec mi a, ultrices egestas lectus. Etiam rutrum et turpis nec auctor.",
                            CreatedDate = new DateTime(2021, 4, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 6,
                            Title = "Nunc quis quam pulvinar"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Nam augue augue, luctus vitae nisl at, finibus dictum orci. Nunc in egestas dui. Fusce efficitur enim nunc, sit amet mattis dolor efficitur ac. Proin pulvinar urna non elit vestibulum.",
                            CreatedDate = new DateTime(2021, 5, 22, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 7,
                            Title = "Aliquam vehicula enim"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Trg Alije Izetbegovica 2",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(5231),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(6928),
                            LocalCommitteeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ulica 3",
                            Capacity = 10,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(7580),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(7656),
                            LocalCommitteeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Ulica 4",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(7696),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(7705),
                            LocalCommitteeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Ulica 22",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(7727),
                            EstablishmentDate = new DateTime(2021, 7, 22, 14, 41, 58, 172, DateTimeKind.Local).AddTicks(7736),
                            LocalCommitteeId = 4
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mandate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AiesecBiH.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "Admin",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "P",
                            Name = "President"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "TL",
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "TM",
                            Name = "TeamMember"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfExecution")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<int>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberExecutorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("MemberCreatorId");

                    b.HasIndex("MemberExecutorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 2,
                            Name = "Sastanak sa partnerima",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 2,
                            Name = "Kontaktirati Dom armije",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 2,
                            Name = "Odrzati intervju sa novim clanovima",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 3,
                            MemberCreatorId = 3,
                            Name = "Edukacija novih clanova",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2021, 5, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 3,
                            Name = "Priprema za YSF",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedDate = new DateTime(2021, 5, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 3,
                            Name = "SWAT analiza za ITA",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedDate = new DateTime(2021, 12, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 2,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 5,
                            Name = "Kontaktirati govornike za YSF",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedDate = new DateTime(2021, 12, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateOfExecution = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 2,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 5,
                            Name = "Odabrati clanove za nesto",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Events")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Events")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.HasOne("AiesecBiH.Database.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.HasOne("AiesecBiH.Database.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Members")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Members")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.Notice", b =>
                {
                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Offices")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany()
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany()
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberCreator")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("MemberCreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberExecutor")
                        .WithMany("ExecutedTasks")
                        .HasForeignKey("MemberExecutorId");

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("MemberCreator");

                    b.Navigation("MemberExecutor");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");

                    b.Navigation("Offices");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Navigation("CreatedTasks");

                    b.Navigation("ExecutedTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
