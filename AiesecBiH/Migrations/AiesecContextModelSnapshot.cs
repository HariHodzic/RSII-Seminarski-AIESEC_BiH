// <auto-generated />
using System;
using AiesecBiH.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AiesecBiH.API.Migrations
{
    [DbContext(typeof(AiesecContext))]
    partial class AiesecContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2021, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            Name = "YSF 2020"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2021, 7, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            Name = "LCM"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2021, 8, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2021, 10, 16, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            Name = "Lorem"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2021, 10, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            Name = "Event 2"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2021, 11, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 2,
                            Name = "Event 3"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedDate = new DateTime(2021, 5, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            Name = "Natco"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedDate = new DateTime(2021, 2, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 3,
                            Name = "BSA"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedDate = new DateTime(2020, 12, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 4,
                            Name = "Event"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Attended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 887, DateTimeKind.Local).AddTicks(9617),
                            EventId = 1,
                            MemberId = 2
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1375),
                            EventId = 1,
                            MemberId = 3
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1469),
                            EventId = 1,
                            MemberId = 4
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1478),
                            EventId = 1,
                            MemberId = 5
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1485),
                            EventId = 2,
                            MemberId = 2
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1491),
                            EventId = 2,
                            MemberId = 3
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1497),
                            EventId = 2,
                            MemberId = 4
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1504),
                            EventId = 3,
                            MemberId = 5
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1510),
                            EventId = 3,
                            MemberId = 4
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1517),
                            EventId = 4,
                            MemberId = 4
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1524),
                            EventId = 4,
                            MemberId = 3
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1531),
                            EventId = 4,
                            MemberId = 2
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1537),
                            EventId = 4,
                            MemberId = 5
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1545),
                            EventId = 5,
                            MemberId = 10
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1552),
                            EventId = 6,
                            MemberId = 11
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1559),
                            EventId = 6,
                            MemberId = 12
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1566),
                            EventId = 7,
                            MemberId = 10
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            Attended = false,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 888, DateTimeKind.Local).AddTicks(1572),
                            EventId = 7,
                            MemberId = 11
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "P",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 850, DateTimeKind.Local).AddTicks(3169),
                            Description = "Functional field for members that lead the organization and local committees.",
                            Name = "Presidency"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "MKT",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 850, DateTimeKind.Local).AddTicks(4432),
                            Description = "Functional field that engages the target audience, build strong relationships to create value.",
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "IGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 850, DateTimeKind.Local).AddTicks(4473),
                            Description = "iGV is the department that handles all that is related starting from attracting Exchange Participants (EPs) for our local projects.",
                            Name = "Incomming Global Volounteere"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "OGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 850, DateTimeKind.Local).AddTicks(4482),
                            Description = "Outgoing Global Volunteer team is responsible for creating local strategies on converting opens to applicants.",
                            Name = "Outgoing Global Volounteere"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "PD",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 850, DateTimeKind.Local).AddTicks(4490),
                            Description = "Partnership Development is the department responsible for raising and maintaining the contact with our partners with activities ranging from cold calls.",
                            Name = "Partnership Development"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1199),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(429),
                            Name = "  "
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1366),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1337),
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1388),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1381),
                            Name = "Mostar"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1409),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 854, DateTimeKind.Local).AddTicks(1402),
                            Name = "Zenica"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 865, DateTimeKind.Local).AddTicks(1323),
                            EmailAddress = "aiesec@tej.com",
                            FirstName = "Admin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Admin",
                            LocalCommitteeId = 1,
                            PasswordHash = "oERT/MdLh4c1hpFWzkdX9ELGTDem7T2V+3BaPTA2z9+gttYrZEiEGTGgBmgCG/M9EBNGIxwDBa7S7+O5M6zgSw==",
                            PasswordSalt = "ZOGrarBJW3YFKMdwVay7vw==",
                            PhoneNumber = "03355123",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Dobrinjska 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 876, DateTimeKind.Local).AddTicks(9446),
                            EmailAddress = "ajdin@gmail.com",
                            FirstName = "Ajdin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Kahrimanovic",
                            LocalCommitteeId = 2,
                            PasswordHash = "orDmtUZlGmkt8EclflC7AL+lvk8+V+okIAJA+AD37SF15qP9ck1s/SlqzmRuFk1rGSBp4qCpai3s5bCvhppzaw==",
                            PasswordSalt = "2u0JGc5U25mxy5HXN18/GA==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "user2"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Safeta Zajke 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(1481),
                            EmailAddress = "sulejman.tutnjevic98@gmail.com",
                            FirstName = "Sulejman",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Tutnjevic",
                            LocalCommitteeId = 2,
                            PasswordHash = "f6FtJwTkn58ik0LdivfV4oaPud3lpbbha5lJC5BC8orBgqzr5A8NQeR1hHjV53yz1adk7O/eSNSTiTKN7X4/ZQ==",
                            PasswordSalt = "OuWEKFl5dUPdN4APPBfLoQ==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "sulejmantutnjevic"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Zahira Panjete 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(1751),
                            EmailAddress = "tarik.bucan98@gmail.com",
                            FirstName = "Tarik",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Bucan",
                            LocalCommitteeId = 2,
                            PasswordHash = "XZ9UNMblHwPRrxHed7Z3nAnA+8MbgnpRgBSwt3HMn7nCHWqqTW+4wQ74poxBLaMCe8cZ3sbyVyqh0tdNemuvwQ==",
                            PasswordSalt = "etaTX/AdQk9Dgzf9eDiWQA==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Address = "Grbavica 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(1876),
                            EmailAddress = "selma.idic@aiesec.com",
                            FirstName = "Selma",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Idic",
                            LocalCommitteeId = 2,
                            PasswordHash = "qzWMLV1QH8iRh1nzsM3V5PTBfM941Bz69EK6aFM5wI35ntCIWKcjuntoz6xjSQoIH0U64ztk0/m7/IZtMmmQPw==",
                            PasswordSalt = "xLF2IAeladF0lPvym9Havg==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "selmaidic"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Address = "Doglodi 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(1972),
                            EmailAddress = "emir.zukic@gmail.com",
                            FirstName = "Emir",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Zukic",
                            LocalCommitteeId = 2,
                            PasswordHash = "90fDQeYPAJ+iCWEYlLh3cwkagwoiPYnmHqmm3+lwYYdOMzKqZayg3uCcs1b1gobbJCu2ce6ca2lGUGOAec8bCg==",
                            PasswordSalt = "VLUkVnvE//CasUAmpit3ew==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "emirzukic"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Address = "Grbavica 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2078),
                            EmailAddress = "doraglinac@gmail.com",
                            FirstName = "Dora",
                            FunctionalFieldId = 2,
                            Gender = "F",
                            LastName = "Glinac",
                            LocalCommitteeId = 2,
                            PasswordHash = "IlfS1mapuLpBG0ktblsDbMIjp/8i5uGBBXodXw4CzUTnNWVRS1ynmQyXn9Y+559X2T/2VadczHTYIMICCeG5gA==",
                            PasswordSalt = "g7XRr1WV0kvQ3B4mEzewWg==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "doraglinac"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Address = "Borik 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2188),
                            EmailAddress = "nikola.bujak@gmail.com",
                            FirstName = "Nikola",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Bujak",
                            LocalCommitteeId = 2,
                            PasswordHash = "nPmsyXpwT80PLl1HVnuYX9vmvm1aFUFn+1mCIzG8/2g/9AKsvIVNRDEVzB+/bekUy+qwf/czzT2vyJzrTZS4RQ==",
                            PasswordSalt = "XyJdN9xa+NZ794Ir7rAxNg==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "nikolabujak"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Address = "Gospodska 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2324),
                            EmailAddress = "nevzudindosic@gmail.com",
                            FirstName = "Nevzudin",
                            FunctionalFieldId = 3,
                            Gender = "M",
                            LastName = "Dosic",
                            LocalCommitteeId = 2,
                            PasswordHash = "o1rN4RulF46vwM61uH067RaKI29xlYctP9TwwyQbwudk/jJCdpjrp0kHNCImcRxMZR74no0r/PJqU7AEURL9kA==",
                            PasswordSalt = "/1EdHsTq9/Su/IYrmSNOZQ==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "nevzudindosic"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Address = "Mostar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2401),
                            EmailAddress = "klarazovko@gmail.com",
                            FirstName = "Klara",
                            FunctionalFieldId = 4,
                            Gender = "F",
                            LastName = "Zovko",
                            LocalCommitteeId = 2,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "Xvl2u+Bz8G6ZCBlrn0JB1Q==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "klarazovko"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            Address = "Centar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2471),
                            EmailAddress = "hanakulenovic@gmail.com",
                            FirstName = "Hana",
                            FunctionalFieldId = 5,
                            Gender = "F",
                            LastName = "Kulenovic",
                            LocalCommitteeId = 2,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "Xvl2u+Bz8G6ZCBlrn0JB1Q==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "hanakulenovic"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2541),
                            EmailAddress = "test3@gmail.com",
                            FirstName = "Haris",
                            FunctionalFieldId = 3,
                            Gender = "M",
                            LastName = "Brulic",
                            LocalCommitteeId = 3,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "2Zy2YSIJNjdBd+WH+vQm9g==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "harisbrulic"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2608),
                            EmailAddress = "amelmusic@gmail.com",
                            FirstName = "Amel",
                            FunctionalFieldId = 4,
                            Gender = "M",
                            LastName = "Music",
                            LocalCommitteeId = 3,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "W2xHANyzkQ310+WboBYYog==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "amelmusic"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2681),
                            EmailAddress = "denis@gmail.com",
                            FirstName = "Denis",
                            FunctionalFieldId = 5,
                            Gender = "M",
                            LastName = "Music",
                            LocalCommitteeId = 3,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "dpU9KKb0sGRQm5Uz1XEZjQ==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "denismusic"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2747),
                            EmailAddress = "elmirbabovic@gmail.com",
                            FirstName = "Elmir",
                            FunctionalFieldId = 4,
                            Gender = "M",
                            LastName = "Babovic",
                            LocalCommitteeId = 3,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "cCU863j17LCNXXapzuqHuw==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "elmirbabovic"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            Address = "Test 6",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2833),
                            EmailAddress = "irmasaric@gmail.com",
                            FirstName = "Irma",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Saric",
                            LocalCommitteeId = 4,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "JUiIOiPbc0hxErylNOZJVg==",
                            PhoneNumber = "0621112222",
                            RoleId = 4,
                            Username = "irmasaric"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            Address = "Dobrinja 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2903),
                            EmailAddress = "test2@gmail.com",
                            FirstName = "Ajla",
                            FunctionalFieldId = 3,
                            Gender = "M",
                            LastName = "Brulic",
                            LocalCommitteeId = 4,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "JUiIOiPbc0hxErylNOZJVg==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "ajlabrulic"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(2977),
                            EmailAddress = "test1@gmail.com",
                            FirstName = "Haris",
                            FunctionalFieldId = 4,
                            Gender = "M",
                            LastName = "Brulic",
                            LocalCommitteeId = 4,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "JUiIOiPbc0hxErylNOZJVg==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "harisbrulic"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 877, DateTimeKind.Local).AddTicks(3045),
                            EmailAddress = "nejiravrana@gmail.com",
                            FirstName = "Nejira",
                            FunctionalFieldId = 3,
                            Gender = "Z",
                            LastName = "Vrana",
                            LocalCommitteeId = 4,
                            PasswordHash = "7Wb8b1/oa6uBe/ITFrVxPWiRUMxdNbn2Z+WE8z+LlPG+DaHilpALUC9MDT5jrwr6rdh7LE2LnHjp7uitxvo7dw==",
                            PasswordSalt = "JUiIOiPbc0hxErylNOZJVg==",
                            PhoneNumber = "062567948",
                            RoleId = 4,
                            Username = "nejiravrana"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Notices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Otvaraju se prijave za poziciju MCP iduceg mandata.",
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 2,
                            Title = "Prijava za poziciju"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Suspendisse convallis non orci sed viverra. Sed ac sapien vitae sapien cursus tincidunt quis id nibh. Quisque dictum et dolor in lobortis. Nulla turpis ligula, vehicula vel elit commodo, euismod fermentum lacus. Donec ligula turpis, maximus at velit a, fringilla lobortis ligula.",
                            CreatedDate = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 3,
                            Title = "Fusce aliquam mi vehicula"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Nunc in egestas dui. Fusce efficitur enim nunc, sit amet mattis dolor efficitur ac. Proin pulvinar urna non elit vestibulum,",
                            CreatedDate = new DateTime(2020, 8, 8, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 4,
                            Title = "Nunc imperdiet urna ac orci"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            CreatedDate = new DateTime(2020, 10, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 5,
                            Title = "Fusce erat est fermentum"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Maecenas in tellus metus. Integer commodo turpis a massa tincidunt vulputate. Integer lacus ligula, tristique nec mi a, ultrices egestas lectus. Etiam rutrum et turpis nec auctor.",
                            CreatedDate = new DateTime(2021, 4, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 6,
                            Title = "Nunc quis quam pulvinar"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Nam augue augue, luctus vitae nisl at, finibus dictum orci. Nunc in egestas dui. Fusce efficitur enim nunc, sit amet mattis dolor efficitur ac. Proin pulvinar urna non elit vestibulum.",
                            CreatedDate = new DateTime(2021, 5, 22, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 7,
                            Title = "Aliquam vehicula enim"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Trg Alije Izetbegovica 2",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(1677),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(3546),
                            LocalCommitteeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ulica 3",
                            Capacity = 10,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(4233),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(4316),
                            LocalCommitteeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Ulica 4",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(4350),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(4358),
                            LocalCommitteeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Ulica 22",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(4376),
                            EstablishmentDate = new DateTime(2021, 9, 16, 20, 1, 45, 855, DateTimeKind.Local).AddTicks(4383),
                            LocalCommitteeId = 4
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mandate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AiesecBiH.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "Admin",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "P",
                            Name = "President"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "TL",
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "TM",
                            Name = "TeamMember"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfExecution")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<int>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberExecutorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("MemberCreatorId");

                    b.HasIndex("MemberExecutorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 2,
                            MemberExecutorId = 2,
                            Name = "Sastanak sa partnerima",
                            Priority = 3,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2020, 9, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 11, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 2,
                            MemberExecutorId = 2,
                            Name = "Kontaktirati Dom armije",
                            Priority = 1,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 2,
                            MemberExecutorId = 3,
                            Name = "Odrzati intervju sa novim clanovima",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 3,
                            MemberExecutorId = 3,
                            Name = "Edukacija novih clanova",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 1, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 1, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 3,
                            MemberExecutorId = 1,
                            Name = "Priprema za YSF",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedDate = new DateTime(2021, 5, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 7, 11, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 3,
                            Name = "SWAT analiza za ITA",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedDate = new DateTime(2021, 12, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 6, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 5,
                            Name = "Kontaktirati govornike za YSF",
                            Priority = 1,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedDate = new DateTime(2020, 1, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 2, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 5,
                            MemberExecutorId = 7,
                            Name = "Odlazak na aerodrom",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 2, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 2,
                            MemberCreatorId = 5,
                            MemberExecutorId = 6,
                            Name = "Sastanak sa Coca-Colom",
                            Priority = 1,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 2, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = true,
                            FunctionalFieldId = 2,
                            LocalCommitteeId = 3,
                            MemberCreatorId = 5,
                            MemberExecutorId = 7,
                            Name = "Kontaktirati sponzore za BSA",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 2, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 4,
                            LocalCommitteeId = 4,
                            MemberCreatorId = 5,
                            MemberExecutorId = 6,
                            Name = "Kupiti panel za BSA",
                            Priority = 3,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 2, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 2,
                            LocalCommitteeId = 4,
                            MemberCreatorId = 5,
                            MemberExecutorId = 7,
                            Name = "Kontaktirati sponzore za hranu, BSA",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreatedDate = new DateTime(2021, 1, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 2, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 3,
                            MemberCreatorId = 5,
                            MemberExecutorId = 6,
                            Name = "Kontaktirati Dom Armije za YSF",
                            Priority = 2,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Events")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Events")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.HasOne("AiesecBiH.Database.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.HasOne("AiesecBiH.Database.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Members")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Members")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.Notice", b =>
                {
                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Offices")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany()
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany()
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberCreator")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("MemberCreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberExecutor")
                        .WithMany("ExecutedTasks")
                        .HasForeignKey("MemberExecutorId");

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("MemberCreator");

                    b.Navigation("MemberExecutor");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");

                    b.Navigation("Offices");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Navigation("CreatedTasks");

                    b.Navigation("ExecutedTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
