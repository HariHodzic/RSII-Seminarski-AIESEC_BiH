// <auto-generated />
using System;
using AiesecBiH.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AiesecBiH.API.Migrations
{
    [DbContext(typeof(AiesecContext))]
    [Migration("20210915232433_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllFunctionalFields")
                        .HasColumnType("bit");

                    b.Property<bool>("AllLocalCommittees")
                        .HasColumnType("bit");

                    b.Property<bool>("AllMembers")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2020, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "Sastanak sa partnerima"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2020, 7, 7, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "Kontaktirati Dom armije"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2020, 10, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2020, 12, 16, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 1,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "Odrzati intervju sa novim clanovima"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2020, 10, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 3,
                            IsOnline = false,
                            LocalCommitteeId = 3,
                            Name = "Edukacija novih clanova"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2021, 5, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 3,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "Priprema za YSF"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2021, 5, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 3,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "SWAT analiza za ITA"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2021, 12, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 2,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "Kontaktirati govornike za YSF"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            AllFunctionalFields = false,
                            AllLocalCommittees = false,
                            AllMembers = false,
                            CreatedDate = new DateTime(2021, 12, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            DateTime = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            FunctionalFieldId = 2,
                            IsOnline = false,
                            LocalCommitteeId = 1,
                            Name = "Odabrati clanove za nesto"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Attended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendances");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "P",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 957, DateTimeKind.Local).AddTicks(6604),
                            Name = "Presidency"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "MKT",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 957, DateTimeKind.Local).AddTicks(8902),
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "IGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 957, DateTimeKind.Local).AddTicks(8946),
                            Name = "Incomming Global Volounteere"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "OGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 957, DateTimeKind.Local).AddTicks(8963),
                            Name = "Outgoing Global Volounteere"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "PD",
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 957, DateTimeKind.Local).AddTicks(8978),
                            Name = "Partnership Development"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(900),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(85),
                            Name = "<Undefined>"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(1932),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(1839),
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(1966),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(1957),
                            Name = "Mostar"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(1991),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(1983),
                            Name = "Zenica"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(2016),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 962, DateTimeKind.Local).AddTicks(2009),
                            Name = "Banja Luka"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 971, DateTimeKind.Local).AddTicks(4051),
                            EmailAddress = "aiesec@tej.com",
                            FirstName = "Admin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Admin",
                            LocalCommitteeId = 1,
                            PasswordHash = "6tA0bZ6UhrFDaha3/Q6BE9cX2Tuz5LZjeJPFfEqV66Sz/SyMrwJYkVwB2txn8vwsMZ6yVP5XXkbeP2258I8k4A==",
                            PasswordSalt = "7HivjxY/eZ5l388TaNiaQg==",
                            PhoneNumber = "03355123",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Dobrinjska 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(5852),
                            EmailAddress = "hari.hodzic98@gmail.com",
                            FirstName = "Ajdin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Kahrimanovic",
                            LocalCommitteeId = 2,
                            PasswordHash = "nW/gPcJwmgsCPur2JEbRK3VVlOfB56OejQ0j7mDJ2fp52msvayqGxaRsdRcDahvtOXAP2T2bsvdL8vTldDWGlg==",
                            PasswordSalt = "AwK9SDc396m9zgLh8pO8yw==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "ajdinkahrimanovic"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Address = "Safeta Zajke 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(7201),
                            EmailAddress = "sulejman.tutnjevic98@gmail.com",
                            FirstName = "Sulejman",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Tutnjevic",
                            LocalCommitteeId = 2,
                            PasswordHash = "a3COjvyV87ZFCXAFp65h5X3xdtG7ePUTVCo/9EMQsoJdgYFJX+2eQsdSlAFZpMY51LRkYp/jjzIN+92bf6jKNA==",
                            PasswordSalt = "jIfPmZ5Za8aNsmjPuXxbTQ==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "sulejmantutnjevic"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Zahira Panjete 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(7650),
                            EmailAddress = "tarik.bucan98@gmail.com",
                            FirstName = "Tarik",
                            FunctionalFieldId = 3,
                            Gender = "M",
                            LastName = "Bucan",
                            LocalCommitteeId = 2,
                            PasswordHash = "rsBg46sPHNPaxfE1N7QQJC413JOoxIvKFkm9A7bKRVZbEqBjUXnIwA9TkWNSjGXqNK88lcw1YJLhQXQzfYSm5w==",
                            PasswordSalt = "RJWRhFFrYdkx6MTDjUzjow==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "tarikbucan"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Grbavica 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(7870),
                            EmailAddress = "selma.idic@aiesec.com",
                            FirstName = "Selma",
                            FunctionalFieldId = 4,
                            Gender = "M",
                            LastName = "Idic",
                            LocalCommitteeId = 1,
                            PasswordHash = "DTv1Z1DGKjLzdxGqhKtmTzcNc80usv/iemVI1I+DmlvQUZzsUvfp5UUBNzRM5mO82H2g4r+cbfq58QY/OnXL4g==",
                            PasswordSalt = "4IreqT7fr9WKVF4X+o3QNA==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "selmaidic"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Address = "Doglodi 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8015),
                            EmailAddress = "emir.zukic@gmail.com",
                            FirstName = "Emir",
                            FunctionalFieldId = 5,
                            Gender = "M",
                            LastName = "Zukic",
                            LocalCommitteeId = 3,
                            PasswordHash = "EFBNdvVPGOfK5ipFAcqp7+aCr+pg/uqNIs3hA4A2rzXZRdokF0GfE8OffUQly3EPZTeXx8gMcL1UUsjbUGGACg==",
                            PasswordSalt = "VbYYIYKwV1lSyXIsYHxxOg==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "emirzukic"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Address = "Grbavica 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8115),
                            EmailAddress = "doraglinac@gmail.com",
                            FirstName = "Dora",
                            FunctionalFieldId = 1,
                            Gender = "F",
                            LastName = "Glinac",
                            LocalCommitteeId = 2,
                            PasswordHash = "wP3xRoMom4xP/iusWawT7Jmnv3UBD0ED5b5sTvt4fZzNnMtZEnh9auPEp59pBanY27xiNZ9s7Y1JxAJEU2TCjA==",
                            PasswordSalt = "21nCfoqzLD15xVWAfLauLQ==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "doraglinac"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Address = "Borik 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8222),
                            EmailAddress = "nikola.bujak@gmail.com",
                            FirstName = "Nikola",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Bujak",
                            LocalCommitteeId = 2,
                            PasswordHash = "tjBCja+EPxy+LaNUjOM2J6FUTJV5r3J+ojon4oRmZML+eyFeo30YOgPp+3MOZXvt3ZsLeLQVYBFbM6E0vAoS/g==",
                            PasswordSalt = "KhvPHEX8t1oP1EtvsxWEgw==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nikolabujak"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Address = "Gospodska 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8476),
                            EmailAddress = "nevzudindosic@gmail.com",
                            FirstName = "Nevzudin",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Dosic",
                            LocalCommitteeId = 2,
                            PasswordHash = "RgQ2bpgow5LZLJqQIngMP0NusQ1oIa+esVP3T0WOUZyVTOj506hbfbSjH8knisDYLQ8q6meWPptXMVFb20xx0Q==",
                            PasswordSalt = "NWJlSr/99Lrcip9mLaGs7A==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nevzudindosic"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Address = "Mostar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8576),
                            EmailAddress = "klarazovko@gmail.com",
                            FirstName = "Klara",
                            FunctionalFieldId = 2,
                            Gender = "F",
                            LastName = "Zovko",
                            LocalCommitteeId = 1,
                            PasswordHash = "OH010cT5i2GSw+2RyChpdG8krV217m0i9UgEDAt6nXYeYA5wmS+IOq77mu/swpbf6itUEOw1SoSii0BLKUcPlQ==",
                            PasswordSalt = "zsN/AL97AwjT9YG2yUPTfg==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "klarazovko"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            Address = "Centar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8676),
                            EmailAddress = "hanakulenovic@gmail.com",
                            FirstName = "Hana",
                            FunctionalFieldId = 1,
                            Gender = "F",
                            LastName = "Kulenovic",
                            LocalCommitteeId = 4,
                            PasswordHash = "OH010cT5i2GSw+2RyChpdG8krV217m0i9UgEDAt6nXYeYA5wmS+IOq77mu/swpbf6itUEOw1SoSii0BLKUcPlQ==",
                            PasswordSalt = "zsN/AL97AwjT9YG2yUPTfg==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "hanakulenovic"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            Address = "Test 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 982, DateTimeKind.Local).AddTicks(8828),
                            EmailAddress = "harisbrulic@gmail.com",
                            FirstName = "Haris",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Brulic",
                            LocalCommitteeId = 3,
                            PasswordHash = "OH010cT5i2GSw+2RyChpdG8krV217m0i9UgEDAt6nXYeYA5wmS+IOq77mu/swpbf6itUEOw1SoSii0BLKUcPlQ==",
                            PasswordSalt = "zsN/AL97AwjT9YG2yUPTfg==",
                            PhoneNumber = "062123344",
                            RoleId = 4,
                            Username = "harisbrulic"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Notices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Otvaraju se prijave za poziciju MCP iduceg mandata.",
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 2,
                            Title = "Prijava za poziciju"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Suspendisse convallis non orci sed viverra. Sed ac sapien vitae sapien cursus tincidunt quis id nibh. Quisque dictum et dolor in lobortis. Nulla turpis ligula, vehicula vel elit commodo, euismod fermentum lacus. Donec ligula turpis, maximus at velit a, fringilla lobortis ligula.",
                            CreatedDate = new DateTime(2019, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 3,
                            Title = "Fusce aliquam mi vehicula"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Nunc in egestas dui. Fusce efficitur enim nunc, sit amet mattis dolor efficitur ac. Proin pulvinar urna non elit vestibulum,",
                            CreatedDate = new DateTime(2020, 8, 8, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 4,
                            Title = "Nunc imperdiet urna ac orci"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            CreatedDate = new DateTime(2020, 10, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 5,
                            Title = "Fusce erat est fermentum"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Maecenas in tellus metus. Integer commodo turpis a massa tincidunt vulputate. Integer lacus ligula, tristique nec mi a, ultrices egestas lectus. Etiam rutrum et turpis nec auctor.",
                            CreatedDate = new DateTime(2021, 4, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 6,
                            Title = "Nunc quis quam pulvinar"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Nam augue augue, luctus vitae nisl at, finibus dictum orci. Nunc in egestas dui. Fusce efficitur enim nunc, sit amet mattis dolor efficitur ac. Proin pulvinar urna non elit vestibulum.",
                            CreatedDate = new DateTime(2021, 5, 22, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            MemberId = 7,
                            Title = "Aliquam vehicula enim"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Trg Alije Izetbegovica 2",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(3083),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5035),
                            LocalCommitteeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ulica 3",
                            Capacity = 10,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5744),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5837),
                            LocalCommitteeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Ulica 4",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5880),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5888),
                            LocalCommitteeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Ulica 22",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5910),
                            EstablishmentDate = new DateTime(2021, 9, 16, 1, 24, 31, 963, DateTimeKind.Local).AddTicks(5919),
                            LocalCommitteeId = 4
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mandate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AiesecBiH.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "Admin",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "P",
                            Name = "President"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "TL",
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "TM",
                            Name = "TeamMember"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfExecution")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<int>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberExecutorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("MemberCreatorId");

                    b.HasIndex("MemberExecutorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedDate = new DateTime(2019, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 2,
                            Name = "Sastanak sa partnerima",
                            Priority = 3,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 11, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 2,
                            Name = "Kontaktirati Dom armije",
                            Priority = 1,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 10, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 1,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 2,
                            Name = "Odrzati intervju sa novim clanovima",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedDate = new DateTime(2020, 10, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 3,
                            MemberCreatorId = 3,
                            Name = "Edukacija novih clanova",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedDate = new DateTime(2021, 5, 14, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 3,
                            Name = "Priprema za YSF",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedDate = new DateTime(2021, 5, 13, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 7, 11, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 3,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 3,
                            Name = "SWAT analiza za ITA",
                            Priority = 2,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedDate = new DateTime(2021, 12, 9, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 6, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 2,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 5,
                            Name = "Kontaktirati govornike za YSF",
                            Priority = 1,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedDate = new DateTime(2021, 12, 10, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2020, 11, 12, 12, 11, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vestibulum semper lacus vel dolor consectetur, eu consequat lorem hendrerit.",
                            Executed = false,
                            FunctionalFieldId = 2,
                            LocalCommitteeId = 1,
                            MemberCreatorId = 5,
                            Name = "Odabrati clanove za nesto",
                            Priority = 2,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Events")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Events")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.HasOne("AiesecBiH.Database.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.HasOne("AiesecBiH.Database.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Members")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Members")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.Notice", b =>
                {
                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Offices")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany()
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany()
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberCreator")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("MemberCreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberExecutor")
                        .WithMany("ExecutedTasks")
                        .HasForeignKey("MemberExecutorId");

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("MemberCreator");

                    b.Navigation("MemberExecutor");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");

                    b.Navigation("Offices");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Navigation("CreatedTasks");

                    b.Navigation("ExecutedTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
