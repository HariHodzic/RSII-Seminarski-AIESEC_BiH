// <auto-generated />
using System;
using AiesecBiH.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AiesecBiH.Migrations
{
    [DbContext(typeof(AiesecContext))]
    [Migration("20210704172859_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AiesecBiH.Database.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sarajevo",
                            Postcode = "71000"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mostar",
                            Postcode = "88000"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zenica",
                            Postcode = "72000"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Banja Luka",
                            Postcode = "78000"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sarajevo",
                            Postcode = "71000"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tuzla",
                            Postcode = "77000"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllFunctionalFields")
                        .HasColumnType("bit");

                    b.Property<bool>("AllLocalCommittees")
                        .HasColumnType("bit");

                    b.Property<bool>("AllMembers")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Attended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendances");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("FileModels");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalFields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "P",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 319, DateTimeKind.Local).AddTicks(6678),
                            Name = "Presidency"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "MKT",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 319, DateTimeKind.Local).AddTicks(7520),
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "IGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 319, DateTimeKind.Local).AddTicks(7545),
                            Name = "Incomming Global Volounteere"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "OGV",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 319, DateTimeKind.Local).AddTicks(7553),
                            Name = "Outgoing Global Volounteere"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "PD",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 319, DateTimeKind.Local).AddTicks(7561),
                            Name = "Partnership Development"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "TM",
                            Active = true,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 319, DateTimeKind.Local).AddTicks(7569),
                            Name = "Talent Management"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId")
                        .IsUnique();

                    b.ToTable("LocalCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CityId = 1,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(12),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 321, DateTimeKind.Local).AddTicks(9550)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CityId = 2,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(428),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(402)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CityId = 3,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(448),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(444)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CityId = 4,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(460),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(456)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CityId = 5,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(471),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(468)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CityId = 6,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(483),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(479)
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 335, DateTimeKind.Local).AddTicks(4219),
                            EmailAddress = "aiesec@aiesec.com",
                            FirstName = "Admin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Admin",
                            PasswordHash = "jvwBhCXoKuQHXTBP60JtFw4KujstWKSgt+iN8G9QDZNmOpK0fgt0Lr7KF44ZeRKiQDDrAeIs7G4amPoLN5LGkA==",
                            PasswordSalt = "E/pTpOaYeFO8p7SzWvVdlA==",
                            PhoneNumber = "03355123",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Safeta Zajke 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 345, DateTimeKind.Local).AddTicks(7025),
                            EmailAddress = "sulejman.tutnjevic98@gmail.com",
                            FirstName = "Sulejman",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Tutnjevic",
                            LocalCommitteeId = 1,
                            PasswordHash = "8Bd742uYmjmCeUuIAV1DXAio4E6dSHHaljVHwhcRmk7k/Xb/PcACpctpZUf6j+h1xxzb7RWZyQcmHIGQiwwzXA==",
                            PasswordSalt = "s/PwKiNaPI6gzjt7qA7YLQ==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "sulejmantutnjevic"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Zahira Panjete 298",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(1226),
                            EmailAddress = "tarik.bucan98@gmail.com",
                            FirstName = "Tarik",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Bucan",
                            LocalCommitteeId = 2,
                            PasswordHash = "ieaQ6bxONyVgoBy79F5D/QuWhu108R4rlZDjhDTploTxiksHlhn4jWWet9tctHFbOieRY9JnM+7m3/qm2MNtpg==",
                            PasswordSalt = "nv/aJp/k23tOZLVbBorWtA==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "tarikbucan"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Grbavica 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(1583),
                            EmailAddress = "selma.idic@aiesec.com",
                            FirstName = "Selma",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Idic",
                            LocalCommitteeId = 2,
                            PasswordHash = "kl+0s8L988DsMaSamhPCKx4h9SQlNevV0NJj5gZovI0n68crwrUTcNd29qLCeI3zKxTOCVtGKM7YGa+8HumFMw==",
                            PasswordSalt = "TIQnnMy8jbc60Gcp0osGmg==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "selmaidic"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Address = "Dobrinjska 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(1706),
                            EmailAddress = "ajdin.kahrimanovic8@aiesec.com",
                            FirstName = "Ajdin",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Kahrimanovic",
                            LocalCommitteeId = 2,
                            PasswordHash = "rwmsNsm0KbMLpX3TEjaIa83ydRcetXRbwt1gjfsOJM2IL0q0xXynfnmUaS9un13x6z2gDrcBW/2gkS3insuyaw==",
                            PasswordSalt = "IlrTfS3mWupnp5Tg4jsYMg==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "ajdinkahrimanovic"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Address = "Doglodi 12",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(1809),
                            EmailAddress = "emir.zukic@gmail.com",
                            FirstName = "Emir",
                            FunctionalFieldId = 1,
                            Gender = "M",
                            LastName = "Zukic",
                            LocalCommitteeId = 2,
                            PasswordHash = "rJ7a+/zJJE2m9AdR4ah4crdZrSMa1do9ES7Sv7meRqghQc4V9B0wcSD+q3QxiN+rMu+c1a316EIlR9YRLEHnIQ==",
                            PasswordSalt = "TpNLAVpjxKFv3LIIJWHqgw==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "emirzukic"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Address = "Grbavica 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(1906),
                            EmailAddress = "doraglinac@gmail.com",
                            FirstName = "Dora",
                            FunctionalFieldId = 1,
                            Gender = "F",
                            LastName = "Glinac",
                            LocalCommitteeId = 1,
                            PasswordHash = "9E+nAqANb2X2a3VN2Bf5J92BAN3jAKRCssLXCdL6aMtJOnpSYRmb0avT5RG5mXH3tE4hy5j7SVMA03+6u8d5nQ==",
                            PasswordSalt = "KlYXk8I+4aMOsYAfDFDlaQ==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "doraglinac"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Address = "Borik 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(2304),
                            EmailAddress = "nikola.bujak@gmail.com",
                            FirstName = "Nikola",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Bujak",
                            LocalCommitteeId = 1,
                            PasswordHash = "ATbjBbX37dnG84o0S9f9PMony3Av/dGsKV1YzWgxm6B5qag/JoIWCmjhuLaND2ZTZFvdSK2zofeniEtQk8c6Dw==",
                            PasswordSalt = "UxUXaqU90poV2XRZ1+Ai0A==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nikolabujak"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Address = "Gospodska 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(2485),
                            EmailAddress = "nevzudindosic@gmail.com",
                            FirstName = "Nevzudin",
                            FunctionalFieldId = 2,
                            Gender = "M",
                            LastName = "Dosic",
                            LocalCommitteeId = 1,
                            PasswordHash = "1CYXNs/u9qGEQOoOKC7e377hSLCKlzjMFbeztgKKdK4CMdARNVpn6PPujdY9es+Mqzu8GqG9Im3XzUxhht3QVg==",
                            PasswordSalt = "mDfW4DFLJnkh7FZXRX4Veg==",
                            PhoneNumber = "062123344",
                            RoleId = 2,
                            Username = "nevzudindosic"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Address = "Mostar 4",
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 346, DateTimeKind.Local).AddTicks(2573),
                            EmailAddress = "klarazovko@gmail.com",
                            FirstName = "Klara",
                            FunctionalFieldId = 2,
                            Gender = "F",
                            LastName = "Zovko",
                            LocalCommitteeId = 1,
                            PasswordHash = "4pz9KYwXccqaWNBnVsDYr28GquecAheWLryxFgYPicuEmFFplMuP8Aw/C5dcSbZltH5NxFe96qH3iMXSFVLfyw==",
                            PasswordSalt = "8T3zkne7q/Igr2tSSFa8sg==",
                            PhoneNumber = "062123344",
                            RoleId = 3,
                            Username = "klarazovko"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalCommitteeId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Trg Alije Izetbegovica 2",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(5396),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(6585),
                            LocalCommitteeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ulica 3",
                            Capacity = 10,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(7009),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(7044),
                            LocalCommitteeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Ulica 4",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(7065),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(7070),
                            LocalCommitteeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Address = "Ulica 22",
                            Capacity = 20,
                            CreatedDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(7081),
                            EstablishmentDate = new DateTime(2021, 7, 4, 19, 28, 58, 322, DateTimeKind.Local).AddTicks(7086),
                            LocalCommitteeId = 4
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mandate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AiesecBiH.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "Admin",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "TM",
                            Name = "TeamMember"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "TL",
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "P",
                            Name = "President"
                        });
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfExecution")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Executed")
                        .HasColumnType("bit");

                    b.Property<int>("FunctionalFieldId")
                        .HasColumnType("int");

                    b.Property<int>("LocalCommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberExecutorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalFieldId");

                    b.HasIndex("LocalCommitteeId");

                    b.HasIndex("MemberCreatorId");

                    b.HasIndex("MemberExecutorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("AiesecBiH.Database.Event", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Events")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Events")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.EventAttendance", b =>
                {
                    b.HasOne("AiesecBiH.Database.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AiesecBiH.Database.FileModel", b =>
                {
                    b.HasOne("AiesecBiH.Database.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.HasOne("AiesecBiH.Database.City", "City")
                        .WithOne()
                        .HasForeignKey("AiesecBiH.Database.LocalCommittee", "CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany("Members")
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Members")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.Office", b =>
                {
                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany("Offices")
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("LocalCommittee");
                });

            modelBuilder.Entity("AiesecBiH.Database.Task", b =>
                {
                    b.HasOne("AiesecBiH.Database.FunctionalField", "FunctionalField")
                        .WithMany()
                        .HasForeignKey("FunctionalFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.LocalCommittee", "LocalCommittee")
                        .WithMany()
                        .HasForeignKey("LocalCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberCreator")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("MemberCreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Member", "MemberExecutor")
                        .WithMany("ExecutedTasks")
                        .HasForeignKey("MemberExecutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AiesecBiH.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalField");

                    b.Navigation("LocalCommittee");

                    b.Navigation("MemberCreator");

                    b.Navigation("MemberExecutor");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AiesecBiH.Database.FunctionalField", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("AiesecBiH.Database.LocalCommittee", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Members");

                    b.Navigation("Offices");
                });

            modelBuilder.Entity("AiesecBiH.Database.Member", b =>
                {
                    b.Navigation("CreatedTasks");

                    b.Navigation("ExecutedTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
